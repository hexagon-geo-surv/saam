// SPDX-FileCopyrightText: Leica Geosystems AG
//
// SPDX-License-Identifier: MIT

#pragma once

#include <saam/detail/basic_enable_ref_from_this.hpp>
#include <saam/detail/basic_ref.ipp>
#include <saam/detail/basic_var.ipp>

#define UNCHECKED 0
#define COUNTED 1
#define TRACKED 2

// If the mode is not defined from the compiler command line,
// then fall back to the mode coming from Conan option
#ifndef SAAM_BORROW_CHECKING_MODE
#define SAAM_BORROW_CHECKING_MODE @SAAM_BORROW_CHECKING_MODE_CMAKE@
#endif

#if SAAM_BORROW_CHECKING_MODE == COUNTED

#include <saam/detail/counted_borrow_manager.hpp>
namespace saam
{
using current_borrow_manager_t = counted_borrow_manager;
}

#elif SAAM_BORROW_CHECKING_MODE == TRACKED

#include <version>

#if !defined(__cpp_lib_stacktrace) || __cpp_lib_stacktrace < 202011L
    #error "<stacktrace> support is needed for tracked mode"
#endif

#include <saam/detail/tracked_borrow_manager.hpp>
namespace saam
{
using current_borrow_manager_t = tracked_borrow_manager;
}

#elif SAAM_BORROW_CHECKING_MODE == UNCHECKED

#include <saam/detail/unchecked_borrow_manager.hpp>
namespace saam
{
using current_borrow_manager_t = unchecked_borrow_manager;
}

#endif

namespace saam
{

template <typename T>
using var = basic_var<T, current_borrow_manager_t>;

template <typename T>
using ref = basic_ref<T, current_borrow_manager_t>;

template <typename T>
using enable_ref_from_this = basic_enable_ref_from_this<T, current_borrow_manager_t>;

};  // namespace saam
